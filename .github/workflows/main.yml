name: Deploy Frontend to Azure Staging

on:
  push:
    branches:
      - main # Trigger on push to the main branch

# Define key variables once
env:
  # CRITICAL: Replace with your actual ACR login server (e.g., promedhealthdashboard.azurecr.io)
  AZURE_CR_LOGIN_SERVER: "YOUR_ACR_LOGIN_SERVER"
  IMAGE_NAME: frontend-app
  IMAGE_TAG: staging-${{ github.sha }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: Staging # Target the Staging environment
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      
      # 1. Login to Docker Hub
      - name: Docker Hub Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      
      # 2. Login to Azure using Service Principal
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      # 3. CRITICAL FIX: Log in to Azure Container Registry (ACR)
      # Using the robust Azure action that worked for the backend
      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v2
        with:
          login-server: ${{ env.AZURE_CR_LOGIN_SERVER }}
          # Use the same credentials that work for the backend
          username: ${{ secrets.AZURE_ACR_USERNAME }}
          password: ${{ secrets.AZURE_ACR_PASSWORD }}
      
      # 4. Build and Push the Docker Image
      - name: Build and Push Frontend Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          # Use defined variables for consistency
          tags: ${{ env.AZURE_CR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          file: Dockerfile
      
      # 5. This will deploy the new image to the Azure Web App
      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          # CRITICAL: Replace with your actual Web App name
          app-name: "YOUR_FRONTEND_WEB_APP_NAME"
          slot-name: 'production'
          # Use the same full tag for deployment
          images: ${{ env.AZURE_CR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}